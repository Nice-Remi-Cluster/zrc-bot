"""empty message

迁移 ID: 0de5d6a4ab7e
父迁移: 
创建时间: 2025-08-29 17:40:24.265792

"""
from __future__ import annotations

from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa


revision: str = '0de5d6a4ab7e'
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('maimai_bindings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_uuid', sa.String(length=36), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('maimai_bind_name', sa.String(length=100), nullable=True),
    sa.Column('maimai_user_id', sa.String(length=50), nullable=True),
    sa.Column('divingfish_username', sa.String(length=100), nullable=True),
    sa.Column('divingfish_password', sa.String(length=100), nullable=True),
    sa.Column('lxns_friend_code', sa.String(length=30), nullable=True),
    sa.Column('divingfish_latest_sync_at', sa.DateTime(), nullable=False),
    sa.Column('lxns_latest_sync_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_maimai_bindings')),
    info={'bind_key': 'maimai_cn'}
    )
    op.create_table('qq_bindings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_uuid', sa.String(length=36), nullable=False),
    sa.Column('qq_number', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_qq_bindings')),
    sa.UniqueConstraint('qq_number'),
    info={'bind_key': 'union_account'}
    )
    op.create_table('union_users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_union_users')),
    sa.UniqueConstraint('uuid'),
    info={'bind_key': 'union_account'}
    )
    # ### end Alembic commands ###


def downgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('union_users')
    op.drop_table('qq_bindings')
    op.drop_table('maimai_bindings')
    # ### end Alembic commands ###
